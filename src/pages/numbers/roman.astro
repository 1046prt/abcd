---
import BaseLayout from "../../layouts/Base.astro"; 
import LetterCard from "../../components/LetterCard.astro"; 
import BackButton from "../../components/ui/backButton.astro";     
import "../../assets/styles/varnmala/greek-alphabet.css"; // Import the CSS styles

// Define the type for our Roman numeral data entries
export interface RomanNumeralEntry {
  id: number;
  letter: string; // The Roman numeral itself (e.g., "I", "V")
  text?: string;   // The numeric value (e.g., "1", "5")
  description?: string; // The word for the number (e.g., "One", "Five")
  code?: number;   // Unicode or other code if applicable
  emoji?: string;  // Associated emoji (e.g., Braille)
  
}

const pageTitle = "Roman Numerals";
const category = "roman-numerals"; 

const romanNumeralsData: RomanNumeralEntry[] = [
  {
    id: 1,
    letter: "I",
    code: 49, 
    emoji: "⠁", // Braille for 1
    text: "1",
    description: "One"
  },
  {
    id: 2,
    letter: "II",
    code: 50,
    emoji: "⠃", // Braille for 2
    text: "2",
    description: "Two"
  },
  {
    id: 3,
    letter: "III",
    code: 51,
    emoji: "⠇", // Braille for 3
    text: "3",
    description: "Three"
  },
  {
    id: 4,
    letter: "IV",
    code: 52,
    emoji: "⠏", // Braille for 4
    text: "4",
    description: "Four"
  },
  {
    id: 5,
    letter: "V",
    code: 53,
    emoji: "⠟", // Braille for 5
    text: "5",
    description: "Five"
  },
  {
    id: 6,
    letter: "VI",
    code: 54,
    emoji: "⠿", // Braille for 6
    text: "6",
    description: "Six"
  },
  {
    id: 7,
    letter: "VII",
    code: 55,
    emoji: "⡿", // Braille for 7 (removed trailing space)
    text: "7",
    description: "Seven"
  },
  {
    id: 8,
    letter: "VIII",
    code: 56,
    emoji: "⣿", // Braille for 8
    text: "8",
    description: "Eight"
  },
  {
    id: 9,
    letter: "IX",
    code: 57,
    emoji: "⣿⠁", // Braille for 9
    text: "9",
    description: "Nine"
  },
  {
    id: 10,
    letter: "X",
    code: 58,
    emoji: "⣿⠃", // Braille for 0 (as in 10)
    text: "10",
    description: "Ten"
  },
  {
    id: 50,
    letter: "L",
    code: 59, // Continuing sequence
    emoji: "⠇", // Braille for L
    text: "50",
    description: "Fifty"
  },
  {
    id: 100,
    letter: "C",
    code: 60, // Continuing sequence
    emoji: "⠉", // Braille for C
    text: "100",
    description: "One Hundred"
  },
  {
    id: 500,
    letter: "D",
    code: 61, // Continuing sequence
    emoji: "⠙", // Braille for D
    text: "500",
    description: "Five Hundred"
  },
  {
    id: 1000,
    letter: "M",
    code: 62, // Continuing sequence
    emoji: "⠍", // Braille for M
    text: "1000",
    description: "One Thousand"
  }
];
---

<BaseLayout meta={{ title: pageTitle }}>
  <article class="container__page alphabet-page-container"> {}
    <div class="page-header"> {}
      <BackButton href="/numbers" /> {}
      <h1 class="page-main-title">{pageTitle}</h1> {}
      <button id="flip-all-button" class="flip__all__button">Flip All Cards</button> {}
    </div>

    <div class="grid-container alphabet-grid"> {}
      {
        romanNumeralsData.map((entry) => {
          const letterCardItem = {
            ...entry,
            text: entry.text || "", 
            description: entry.description || "", 
          };
          return <LetterCard item={letterCardItem} category={category} />;
        })
      }
    </div>
  </article>

  <script>
    const flipAllButton = document.getElementById("flip-all-button") as HTMLButtonElement | null;
    const flipCards = document.querySelectorAll(".flip__card"); 
    let allFlipped = false;

    if (flipAllButton) {
      flipAllButton.addEventListener("click", () => {
        allFlipped = !allFlipped;

        flipCards.forEach((card) => {
          if (allFlipped) {
            card.classList.add("flipped");
          } else {
            card.classList.remove("flipped");
          }
        });

        flipAllButton.textContent = allFlipped ? "Reset All Cards" : "Flip All Cards";
        
        flipAllButton.classList.add("active");
        setTimeout(() => {
          if (flipAllButton) { 
            flipAllButton.classList.remove("active");
          }
        }, 300);
      });
    } else {
      console.warn("Flip All button with ID 'flip-all-button' not found.");
    }
  </script>
</BaseLayout>