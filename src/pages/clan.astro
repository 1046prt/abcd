---
import "@/assets/styles/societree.css";
import Card from "@/components/Card.astro";
import BaseLayout from "@/layouts/Base";
import clanJson from "public/assets/json/family.json";

interface Surname {
  hi: string;
  en: string;
}

interface Branch {
  id: number;
  gotra: {
    hi: string;
    en: string;
  };
  deity: {
    hi: string;
    en: string;
  };
  caste: {
    hi: string;
    en: string;
  };
  location: {
    hi: string;
    en: string;
  };
  surnames: Surname[];
}

function isBranch(data: any): data is Branch {
  return (
    data &&
    typeof data.id === "number" &&
    data.gotra &&
    typeof data.gotra.hi === "string" &&
    typeof data.gotra.en === "string" &&
    data.deity &&
    typeof data.deity.hi === "string" &&
    typeof data.deity.en === "string" &&
    data.caste &&
    typeof data.caste.hi === "string" &&
    typeof data.caste.en === "string" &&
    data.location &&
    typeof data.location.hi === "string" &&
    typeof data.location.en === "string" &&
    Array.isArray(data.surnames) &&
    data.surnames.every((surname: any) => surname && typeof surname.hi === "string" && typeof surname.en === "string")
  );
}

const validClanData = Array.isArray(clanJson) ? clanJson.filter(isBranch) : [];
---

<BaseLayout meta={{ title: "Clan Explorer" }}>
  <article class="container__clan">
    <div class="clan__header">
      <h1 class="clan__title">Discover Your Heritage and Family Connections</h1>
      <div class="clan__search">
        <div class="clan__search-wrapper">
          <span class="clan__search-icon">üîç</span>
          <input
            type="text"
            id="searchInput"
            class="clan__search-input"
            placeholder="Search by Gotra, Deity, or Caste..."
          />
        </div>
        <button id="downloadPdf" class="download-button" aria-label="Download as PDF">
          <span class="text">Download PDF</span>
        </button>
      </div>
      <div class="clan__legend">
        <dl title="Gotra">
          <dt class="legend" data-icon="üß¨"></dt>
          <dd>Clan</dd>
        </dl>
        <dl title="Kul devi">
          <dt class="legend" data-icon="ü™î"></dt>
          <dd>Deity</dd>
        </dl>
        <dl title="Jaati">
          <dt class="legend" data-icon="üå≥"></dt>
          <dd>Caste</dd>
        </dl>
      </div>
    </div>

    <div class="clan__content">
      <section class="clan__section">
        <Card initialData={validClanData} />
      </section>
    </div>
  </article>
</BaseLayout>

<script>
  function highlightText(text, query) {
    if (!text || !query) return text;
    const regex = new RegExp(`(${query.trim()})`, "gi");
    return text.replace(regex, `<span class="highlight">$1</span>`);
  }

  document.addEventListener("DOMContentLoaded", () => {
    const searchInput = document.getElementById("searchInput");
    const downloadBtn = document.getElementById("downloadPdf");
    const cards = document.querySelectorAll(".card");

    // Search functionality
    searchInput?.addEventListener("input", (e) => {
      const query = e.target.value.toLowerCase().trim();
      
      cards.forEach(card => {
        const gotra = card.dataset.gotra.toLowerCase();
        const deity = card.dataset.deity.toLowerCase();
        const caste = card.dataset.caste.toLowerCase();
        
        const hasMatch = gotra.includes(query) || 
                        deity.includes(query) || 
                        caste.includes(query);
        
        card.style.display = hasMatch ? "block" : "none";
        
        if (hasMatch) {
          // Highlight matching text
          const values = card.querySelectorAll(".value");
          values.forEach(el => {
            const text = el.textContent;
            el.innerHTML = highlightText(text, query);
          });
        }
      });
    });

    // PDF download
    downloadBtn?.addEventListener("click", () => {
      // Expand all cards for printing
      cards.forEach(card => {
        card.classList.add("expanded");
        const btn = card.querySelector(".surname-count");
        const body = card.querySelector(".card-body");
        btn?.setAttribute("aria-expanded", "true");
        body?.setAttribute("aria-hidden", "false");
      });
      
      setTimeout(() => {
        window.print();
      }, 500);
    });
  });
</script>