---
import "@/assets/styles/map/map.css";
import BaseLayout from "@/layouts/Base";
import { Image } from "astro:assets";
import categoryData from "@/data/categories.json";
import BackIcon from "@/assets/icons/back.svg";
type Category = {
  id: string;
  title: string;
  description: string;
  image: string;
  color: string;
};

const categories: Category[] = Object.values(categoryData.categories);
---

<BaseLayout meta={{ title: "Explore India" }}>
  <main class="explore-container">
    <div class="explore-header">
      <h1>Explore India</h1>
    </div>
    <a href="/sample" class="back">
      <BackIcon />
    </a>
    <div class="explore-grid">
      {
        categories.map((category: Category) => (
          <a href={`/map/${category.id}`} class="explore-card">
            <div class="card-image">
              <Image src={category.image} alt={category.title} width={400} height={225} />
            </div>
            <div class="card-content">
              <div class="card-header">
                <span class="category-dot" style={`background-color: ${category.color}`} />
                <h2>{category.title}</h2>
              </div>
              <p>{category.description}</p>
            </div>
          </a>
        ))
      }
    </div>
  </main>
</BaseLayout>

<style>
  .explore-container {
    margin: 0 auto;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    gap: 3rem;
    color: var(--text);;
  }

  .explore-header {
    margin-bottom: 2rem;
  }

  .explore-header h1 {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--text);
  }

  .back {
      position: absolute;
      left: 14rem;
      top: 2rem;
      display: flex;
      align-items: center;
      gap: 0.1rem;
      text-decoration: none;
      color: light-dark(black, white);
      font-weight: 500;
      font-size: 1.1rem;
      transition: color 0.3s ease;
    }

  .explore-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .explore-card {
    display: block;
    text-decoration: none;
    color: var(--text);
    background: var(--background);
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
  }

  .explore-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .card-image {
    width: 100%;
    aspect-ratio: 16/9;
    overflow: hidden;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .card-content {
    padding: 1.5rem;
    background: var(--card);
  }

  .card-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
  }

  .category-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
  }

  .card-header h2 {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--text);
    margin: 0;
  }

  .card-content p {
    font-size: 0.875rem;
    color: var(--text);
    margin: 0;
    line-height: 1.5;
  }

  @media (max-width: 768px) {
    .explore-container {
      padding: 1rem;
    }

    .explore-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
