---
import BaseLayout from "@/layouts/Base";
import "@/assets/styles/vedic.css";
import vedicData from "@/assets/json/vedic.json";

const timeUnits = vedicData.time_units;
---

<BaseLayout meta={{ title: "Vedic Time" }}>
  <div class="container__vedic">
    <script type="text/javascript" async>
    const options = {
      year: "numeric",
      month: "numeric",
      day: "numeric",
      hour: "numeric",
      minute: "numeric",
      second: "numeric",
      hour12: false,
      timeZone: "America/Los_Angeles",
    };

    const fullEnglish = {
      weekday: 'long',
      dayPeriod: 'long',
      year: 'numeric',
      month: 'long',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: 'numeric',
      calendar: 'iso8601',
      timeZone: 'Asia/Kolkata',
      timeZoneName: 'short',
      formatMatcher: 'basic',
      hourCycle: 'h12',
    };

    const fullHindi = {
      weekday: 'long',
      dayPeriod: 'long',
      year: 'numeric',
      month: 'long',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: 'numeric',
      calendar: 'indian',
      timeZone: 'Asia/Kolkata',
      numberingSystem: 'deva',
      /* timeZoneName: 'shortGeneric', */
      formatMatcher: 'basic',
      hourCycle: 'h12',
    };

    const styleOption = {
      dateStyle: 'full',
      timeStyle: 'long',
      calendar:  'iso8601', // 'indian',
      /* numberingSystem: 'deva', */
      timeZone: 'Asia/Kolkata',
      hour12: false,
      useGrouping: true,
      minimumIntegerDigits: 1
    };

    const dateInEnglish = new Intl.DateTimeFormat("en-us", fullEnglish);
    const samay = new Intl.DateTimeFormat("hi", fullHindi);
    console.log(samay);
    const dateInHindi = new Intl.DateTimeFormat('hi',styleOption);
    

  </script>
  <div class="TS">
  <h1 class="tithi">Tithi & Samay</h1>
  <time data-id="today" style="--h:0;--m:0;--s:0">
    <p data-id="hindu"></p>
    <p data-id="hindi"></p>
    <p data-id="english"></p>
  </time>
  </div>

<script>
    const tithiNames = [
      "‡§™‡•ç‡§∞‡§§‡§ø‡§™‡§¶‡§æ", "‡§¶‡•ç‡§µ‡§ø‡§§‡•Ä‡§Ø‡§æ", "‡§§‡•É‡§§‡•Ä‡§Ø‡§æ", "‡§ö‡§§‡•Å‡§∞‡•ç‡§•‡•Ä", "‡§™‡§Ç‡§ö‡§Æ‡•Ä", "‡§∑‡§∑‡•ç‡§†‡•Ä",
      "‡§∏‡§™‡•ç‡§§‡§Æ‡•Ä", "‡§Ö‡§∑‡•ç‡§ü‡§Æ‡•Ä", "‡§®‡§µ‡§Æ‡•Ä", "‡§¶‡§∂‡§Æ‡•Ä", "‡§è‡§ï‡§æ‡§¶‡§∂‡•Ä", "‡§¶‡•ç‡§µ‡§æ‡§¶‡§∂‡•Ä",
      "‡§§‡•ç‡§∞‡§Ø‡•ã‡§¶‡§∂‡•Ä", "‡§ö‡§§‡•Å‡§∞‡•ç‡§¶‡§∂‡•Ä", "‡§™‡•Ç‡§∞‡•ç‡§£‡§ø‡§Æ‡§æ", "‡§Ö‡§Æ‡§æ‡§µ‡§∏‡•ç‡§Ø‡§æ"
    ];

    const getLunarDate = (gregorianDay) => {
      // Calculate the lunar day (1-30) based on the gregorian day
      const lunarDay = (gregorianDay - 1) % 15 + 1; // Ensure it wraps correctly (1-15)

      // Calculate the paksha
      const paksha = gregorianDay <= 15 ? "‡§∂‡•Å‡§ï‡•ç‡§≤ ‡§™‡§ï‡•ç‡§∑" : "‡§ï‡•É‡§∑‡•ç‡§£ ‡§™‡§ï‡•ç‡§∑";

      // Determine tithi
      const tithi = lunarDay - 1;
      console.log({tithi});

      return {
        paksha,
        tithi: tithiNames[tithi]
      };
    };
    const hindu = document.querySelector('[data-id="hindu"]');
    const hindi = document.querySelector('[data-id="hindi"]');
    const english = document.querySelector('[data-id="english"]');
    const timeElem = document.querySelector('time');

    const renderClock = () => {
      const today = new Date();
      const eng =  dateInEnglish.format(today);
      const hi = samay.format(today);
      console.log(samay.formatToParts());
      const hindi_date = dateInHindi.format(today);
      /* const { paksha, tithi } = getLunarDate(); */
      /* console.log({paksha, tithi}) */
      hindi.innerHTML = hindi_date;
      hindu.innerHTML =  hi;
      english.innerHTML = eng;
      const h = today.getHours();
      const m = today.getMinutes();
      const s = today.getSeconds();
      timeElem.style.setProperty("--h", h*15);
      timeElem.style.setProperty("--m", m);
      timeElem.style.setProperty("--s", s*10);
      timeElem.style.backgroundColor  = `hsl(${h} ${m} ${s})`;
    };
    renderClock();
    setInterval(renderClock, 1000);
  </script>
    <div class="vedic__layout">
      <!-- Converter Card -->
      <div class="converter__card">
        <form id="converter__form" class="converter__form">
          <div class="form__group">
            <label for="input__value">Enter Value</label>
            <input type="number" id="input__value" placeholder="Enter value" required />
          </div>

          <div class="form__grid">
            {
              ["From", "To"].map((label) => (
                <div class="form__group">
                  <label for={`${label.toLowerCase()}__unit`}>{label}</label>
                  <select id={`${label.toLowerCase()}__unit`}>
                    {timeUnits.map((unit) => (
                      <option value={unit.name}>{unit.name}</option>
                    ))}
                  </select>
                </div>
              ))
            }
          </div>

          <button type="submit" class="convert__button">Convert</button>
          <div id="result" class="result__display"></div>
        </form>
      </div>

      <!-- Units Reference -->
      <div class="units__card">
        <h2 class="units__title">Vedic Time Units</h2>
        <div class="units__grid">
          {
            timeUnits.map((unit) => (
              <div class="unit__item">
                <div class="unit__header">
                  <h3>{unit.name}</h3>
                  <span class="approx">‚âà</span>
                </div>
                <div class="unit__details">
                  <div class="unit__value">
                    <span class="icon">üïõ</span>
                    {unit.seconds.toLocaleString()} seconds
                  </div>
                  <div class="unit__value">
                    <span class="icon">‚è≥</span>
                    {unit.minutes.toLocaleString()} minutes
                  </div>
                  <div class="unit__value">
                    <span class="icon">üìÖ</span>
                    {unit.years.toLocaleString()} years
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script is:inline define:vars={{ timeUnits }}>
  function convert(value, fromUnit, toUnit) {
    const from = timeUnits.find((u) => u.name === fromUnit);
    const to = timeUnits.find((u) => u.name === toUnit);
    if (!from || !to) return null;

    const seconds = value * from.seconds;
    return seconds / to.seconds;
  }

  document.getElementById("converter__form").addEventListener("submit", (e) => {
    e.preventDefault();
    const value = parseFloat(document.getElementById("input__value").value);
    const fromUnit = document.getElementById("from__unit").value;
    const toUnit = document.getElementById("to__unit").value;

    const result = convert(value, fromUnit, toUnit);
    const resultBox = document.getElementById("result");
    resultBox.style.display = "block";
    resultBox.textContent = `${value} ${fromUnit} = ${result.toLocaleString(undefined, {
      maximumFractionDigits: 4
    })} ${toUnit}`;
  });
</script>
