---
import Layout from "@/layouts/Base";
import { locations } from '../data/location.ts';

const meta = {
  title: "India's Geographical Mosaic",
  description: "An Interactive Journey Through India's States and Territories"
};

const stateList = locations.filter(loc => loc.isState);
const utList = locations.filter(loc => !loc.isState);

// Generate a color palette
const generateColorPalette = () => {
  const baseColors = [
    '#3498db', '#2ecc71', '#e74c3c', '#f39c12', 
    '#9b59b6', '#1abc9c', '#34495e', '#e67e22'
  ];
  return baseColors.sort(() => 0.5 - Math.random());
};
const colorPalette = generateColorPalette();


function getContrastColor(hexColor) {
  // Convert hex to RGB
  const r = parseInt(hexColor.slice(1, 3), 16);
  const g = parseInt(hexColor.slice(3, 5), 16);
  const b = parseInt(hexColor.slice(5, 7), 16);
  
  // Calculate luminance
  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;
  
  // Return black or white based on luminance
  return luminance > 0.5 ? '#000000' : '#ffffff';
}

---

<Layout meta={meta}>
  <div class="geographical-mosaic">
    <div class="hero-section">
      <div class="hero-content">
        <h1 class="main-title">Explore India's Administrative Landscape</h1>
        <p class="hero-subtitle">Discover the diverse tapestry of states and union territories</p>
      </div>
    </div>
    
    <div class="location-container">
      <section class="location-section states-section">
        <div class="section-header">
          <h2 class="section-title">
            <span class="icon">üèõÔ∏è</span> States of India
          </h2>
          <div class="stats-badge">{stateList.length} Total States</div>
        </div>
        
        <div class="location-grid">
          {stateList.map((state, index) => (
            <div 
              class="location-card" 
              style={`--card-bg: ${colorPalette[index % colorPalette.length]}; 
                      --card-text: ${getContrastColor(colorPalette[index % colorPalette.length])}`}
            >
              <div class="card-inner">
                <h3 class="location-name">{state.name}</h3>
                <div class="location-details">
                  <span class="label">Capital</span>
                  <span class="value">{state.capital}</span>
                </div>
                <div class="card-overlay"></div>
              </div>
            </div>
          ))}
        </div>
      </section>
      
      <section class="location-section ut-section">
        <div class="section-header">
          <h2 class="section-title">
            <span class="icon">üèùÔ∏è</span> Union Territories
          </h2>
          <div class="stats-badge">{utList.length} Total UTs</div>
        </div>
        
        <div class="location-grid">
          {utList.map((ut, index) => (
            <div 
              class="location-card" 
              style={`--card-bg: ${colorPalette[index % colorPalette.length]}; 
                      --card-text: ${getContrastColor(colorPalette[index % colorPalette.length])}`}
            >
              <div class="card-inner">
                <h3 class="location-name">{ut.name}</h3>
                <div class="location-details">
                  <span class="label">Capital</span>
                  <span class="value">{ut.capital}</span>
                </div>
                <div class="card-overlay"></div>
              </div>
            </div>
          ))}
        </div>
      </section>
    </div>
  </div>
</Layout>

<script>
  // Interactive card hover effects
  const cards = document.querySelectorAll('.location-card');
  cards.forEach(card => {
    card.addEventListener('mouseenter', () => {
      card.classList.add('hover-effect');
    });
    card.addEventListener('mouseleave', () => {
      card.classList.remove('hover-effect');
    });
  });
</script>

<style>
/* :root {
  --background-primary: #f4f6f7;
  --text-primary: #2c3e50;
  --text-secondary: #7f8c8d;
  --
} */

.geographical-mosaic {
  max-width: 1400px;
  margin: 0 auto;
  padding: 2rem;
}

.hero-section {
  text-align: center;
  margin-bottom: 3rem;
  background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
  padding: 3rem 1rem;
  border-radius: 1rem;
  color: white;
}

.main-title {
  font-size: 3rem;
  margin-bottom: 1rem;
  font-weight: 900;
  background: linear-gradient(to right, #ffffff 0%, #e0e0e0 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  border-color: #ecf0f1;
}

.hero-subtitle {
  font-size: 1.5rem;
  color: rgba(255,255,255,0.8);
}

.location-container {
  display: grid;
  gap: 3rem;
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.section-title {
  display: flex;
  align-items: center;
  gap: 1rem;
  font-size: 2rem;
  color: var(--text-primary);
}

.stats-badge {
  background: #3498db;
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 2rem;
  font-weight: bold;
}

.location-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 1.5rem;
}

.location-card {
  position: relative;
  background: var(--card-bg);
  color: var(--card-text);
  border-radius: 1rem;
  overflow: hidden;
  transition: all 0.3s ease;
  transform-style: preserve-3d;
  perspective: 1000px;
  box-shadow: 0 10px 25px rgba(0,0,0,0.1);
}

.location-card .card-inner {
  padding: 1.5rem;
  position: relative;
  z-index: 2;
}

.location-card .card-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, rgba(0,0,0,0.1), rgba(0,0,0,0.3));
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 1;
}

.location-card:hover {
  transform: scale(1.05) rotateX(5deg) rotateY(5deg);
  box-shadow: 0 15px 35px rgba(0,0,0,0.2);
}

.location-card:hover .card-overlay {
  opacity: 1;
}

.location-name {
  font-size: 1.4rem;
  margin-bottom: 1rem;
  font-weight: 800;
  align-items: center;
}

.location-details {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.location-details .label {
  font-size: 0.9rem;
  text-transform: uppercase;
  opacity: 0.7;
}

.location-details .value {
  font-weight: bold;
}

@media (max-width: 768px) {
  .location-grid {
    grid-template-columns: 1fr;
  }
}
</style>

