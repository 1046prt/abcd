---
import Layout from '@/layouts/Base';
import Keyboard from '@/components/DrawKeyboard.astro';
//import Keyboard from '@/components/draww.astro';
import Help from "@/components/Help.astro";

---

<Layout meta={{title:"Draw Keyboard"}}>
  <Fragment slot="header-right">
    <div class="controls">
      <label for="toggleCase" class="control-item">
        <input type="checkbox" name="change_case" id="toggleCase" class="visually-hidden" />
        <span id="text" class="control-button case-toggle" style="--content: 'A'" title="Toggle case" role="switch" aria-checked="false">A</span>
      </label>
      <label for="toggleFont" class="control-item">
        <input type="checkbox" name="change_font" id="toggleFont" class="visually-hidden" />
        <span id="font" class="control-button font-toggle" title="Change font" role="switch" aria-checked="false">T</span>
      </label>
      <label for="toggleBg" class="control-item">
        <input type="checkbox" name="change_bg" id="toggleBg" class="visually-hidden" />
        <span class="control-button bg-toggle" title="Toggle background" role="switch" aria-checked="false">ðŸŽ¨</span>
      </label>
    </div>
    <Help
      title="Hide & Seek Game"
      description="Press any alphabet key from keyboard and that letter will appears and when you press again then it will disappears. See some hover and active effects while hovering over each card."
    />
  </Fragment>
  <Keyboard />
</Layout>
<style>
    .controls {
    position: absolute;
    top: 1rem;
    right: 5rem;
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .control-item {
    display: flex;
    align-items: center;
    justify-content: center;
    gap:0.5rem
  }

  .control-button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 2rem;
    height: 2rem;
    background: var(--control-bg);
    border-radius: 0.25rem;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    border: 2px solid rgba(67, 56, 202, 0.2);
    transition: var(--transition);
    box-shadow: var(--shadow);
    font-size: 1.5rem;
    color: black;
  }

  .control-button::before {
    content: '';
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--accent-color);
    transform: scaleX(0);
    transform-origin: 0 50%;
    transition: transform 0.3s ease-out;
    opacity: 0.1;
  }

  .control-button:hover::before {
    transform: scaleX(1);
  }

  /*.control-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }*/

  /*.main {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: calc(100vh - 120px);
    overflow: hidden;
    transition: var(--transition);
    margin-top: 1rem;
  }*/
/*
  .board {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    overflow: hidden;
    padding: 2rem;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    transition: var(--transition);
    border: 2px solid var(--accent-color);
    border-radius: 1rem;
  }*/

  /*.char {
    position: relative;
    z-index: 2;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: clamp(8rem, 30vw, 20rem);
    font-weight: 900;
    color: white;
    text-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
    transition: var(--transition);
    animation: charReveal 0.4s ease-out;
    will-change: transform, opacity;
  }*/

</style>