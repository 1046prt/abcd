---
import "@/assets/styles/varnmala/index.css"; 
import "@/assets/styles/varnmala/sunsign.css"; 
import BaseLayout from "@/layouts/Base"; 
import BackButton from "@/components/ui/backButton.astro";
// SunSignEntry will be updated in SunSignCards.astro to include parsed letters
import SunSignCard, { type SunSignEntry } from "@/components/SunSignCards.astro";


const pageTitle = "Sun Signs";

// Original data
const sunSignsDataRaw: Omit<SunSignEntry, 'parsedHindiLetters' | 'parsedEnglishLetters'>[] = [
  { id: "aries", name: "Aries (मेष)", symbol: "♈︎", dates: "March 21 - April 19", firstLetters: "A (अ), L (ल), E (ए), I (इ)" },
  { id: "taurus", name: "Taurus (वृषभ)", symbol: "♉︎", dates: "April 20 - May 20", firstLetters: "B (ब), V (व), U (उ), Va (वा), Vi (वी), Vo (वो)" },
  { id: "gemini", name: "Gemini (मिथुन)", symbol: "♊︎", dates: "May 21 - June 20", firstLetters: "K (क), Chh (छ), Gh (घ), Ka (का), Ki (की), Ku (कु)" },
  { id: "cancer", name: "Cancer (कर्क)", symbol: "♋︎", dates: "June 21 - July 22", firstLetters: "D (ड), H (ह), Da (डा), De (डे), Do (डो)" }, 
  { id: "leo", name: "Leo (सिंह)", symbol: "♌︎", dates: "July 23 - August 22", firstLetters: "M (म), T (ट), Ma (मा), Me (मे), Mu (मु)" },
  { id: "virgo", name: "Virgo (कन्या)", symbol: "♍︎", dates: "August 23 - September 22", firstLetters: "P (प), Th (ठ), N (ण), Pa (पा), Pi (पी), Pu (पु)" },
  { id: "libra", name: "Libra (तुला)", symbol: "♎︎", dates: "September 23 - October 22", firstLetters: "R (र), T (त), Ra (रा), Ri (री), Ru (रु)" },
  { id: "scorpio", name: "Scorpio (वृश्चिक)", symbol: "♏︎", dates: "October 23 - November 21", firstLetters: "N (न), Y (य), Na (ना), Ni (नी), Nu (नू), Ne (ने)" }, 
  { id: "sagittarius", name: "Sagittarius (धनु)", symbol: "♐︎", dates: "November 22 - December 21", firstLetters: "Bh (भ), Dh (ध), Ph (फ), F (फ), Ye (ये), Yo (यो)" }, 
  { id: "capricorn", name: "Capricorn (मकर)", symbol: "♑︎", dates: "December 22 - January 19", firstLetters: "Kh (ख), J (ज), Bho (भो), Ja (जा), Ji (जी)" }, 
  { id: "aquarius", name: "Aquarius (कुंभ)", symbol: "♒︎", dates: "January 20 - February 18", firstLetters: "G (ग), S (स), Sh (श), Go (गो), Sa (सा), Si (सी), Su (सू)" }, 
  { id: "pisces", name: "Pisces (मीन)", symbol: "♓︎", dates: "February 19 - March 20", firstLetters: "D (द), Ch (च), Z (ज़), Th (थ), De (दे), Do (दो), Cha (चा), Chi (ची)" },
];

// Process data to include parsedHindiLetters and parsedEnglishLetters
const processedSunSignsData = sunSignsDataRaw.map(sign => {
  const letterPairs = sign.firstLetters ? sign.firstLetters.split(',').map(p => p.trim()).filter(p => p) : [];
  const englishLettersArray: string[] = [];
  const hindiLettersArray: string[] = [];

  letterPairs.forEach(pair => {
    const match = pair.match(/^([A-Za-z\s]+)\s*\(([^)]+)\)$/);
    if (match && match[1] && match[2]) {
      englishLettersArray.push(match[1].trim());
      hindiLettersArray.push(match[2].trim());
    } else {
      const singleLetterMatch = pair.match(/^([A-Za-z\s]+)$/);
      if (singleLetterMatch && singleLetterMatch[1]) {
          englishLettersArray.push(singleLetterMatch[1].trim());
      }
    }
  });

  return {
    ...sign,
    parsedHindiLetters: hindiLettersArray.join(', '),
    parsedEnglishLetters: englishLettersArray.join(', ')
  };
});
---
<BaseLayout meta={{ title: pageTitle }}>
  <BackButton href="/glossary" />
  <div class="container__page sun-sign-page-container">
    <div class="page-header">
      <h1 class="page-main-title">{pageTitle}</h1>
      <button id="flip-all-sunsigns-button" class="flip__all__button">Flip All Cards</button>
    </div>

    <div class="grid-container sun-signs-grid">
      {processedSunSignsData.map(sign => (
        <SunSignCard item={sign} />
      ))}
    </div>
  </div>
</BaseLayout>

<script>
  // User's existing script for flip all
  const flipAllButton = document.getElementById('flip-all-sunsigns-button');
  let allCardsFlipped = false;

  if (flipAllButton) {
    flipAllButton.addEventListener('click', () => {
      allCardsFlipped = !allCardsFlipped;
      
      const cardsToFlip = document.querySelectorAll('.sun-signs-grid .flip__card.sun-sign-card');

      cardsToFlip.forEach(card => {
        if (allCardsFlipped) {
          card.classList.add('flipped');
        } else {
          card.classList.remove('flipped');
        }
      });

      flipAllButton.textContent = allCardsFlipped ? "Reset All Cards" : "Flip All Cards";
      
      
      flipAllButton.classList.add('active'); 
      setTimeout(() => {
        flipAllButton.classList.remove('active');
      }, 300);
    });
  }
</script>

<script>
  // User's existing script for mousemove and individual card flip
  const cards = document.querySelectorAll(".card");
  cards.forEach((letter) => {
    letter.addEventListener("mousemove", (e: Event) => {
      const htmlLetter = letter as HTMLElement;
      const rect = htmlLetter.getBoundingClientRect();
      const event = e as MouseEvent;
      const x = ((event.clientX - rect.left) / htmlLetter.clientWidth) * 100;
      const y = ((event.clientY - rect.top) / htmlLetter.clientHeight) * 100;
      htmlLetter.style.setProperty("--mouse-x", `${x}%`);
      htmlLetter.style.setProperty("--mouse-y", `${y}%`);
    });
  });

  const flipCards = document.querySelectorAll(".flip__card");
  flipCards.forEach((card) => {
    const flipButtons = card.querySelectorAll(".flip__button") as NodeListOf<HTMLElement>;

    flipButtons.forEach((button) => {
      button.addEventListener("click", () => {
        card.classList.toggle("flipped");
      });
    });
  });
</script>