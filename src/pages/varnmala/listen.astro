---
import "@/assets/styles/varnmala/reader.css";
import Help from "@/components/Help.astro";
import BaseLayout from "@/layouts/Base";
import BackButton from "@/components/BackButton.astro";
import SharePopover from "@/components/ShareButton.astro";
import KeyboardTrigger from "@/components/KeyboardTrigger.astro";
import Speaker from "@/components/Speaker.astro";

const meta = {
  title: "Varnmala ‚Ä¢ Listen",
  description:
    "Press a letter or number key to hear its pronunciation and view it with an emoji. Includes voice options."
};
---

<BaseLayout meta={meta}>
  <BackButton />
  <Fragment slot="header-right">
    <Speaker />
    <KeyboardTrigger />
    <SharePopover />
    <Help
      title="Reader"
      description="Press any letter key (A-Z) to display it with a related emoji. Use the Voices dropdown to change voices, and use the audio button to mute/unmute sounds."
    />
  </Fragment>

  <div class="info">Press a key to see the magic</div>
  <article id="container__reader" class="container__reader">
    <div id="letter" class="letter">aüçé</div>
  </article>
  <section class="section--audio hide">
    <audio id="audioPlayer" controlslist="nodownload" controls autoplay></audio>
  </section>
</BaseLayout>

<script>
  import { emojiList } from "@/mappers/alphabet";
  import { getRandomValue } from "@/utils/index";

  const mainBlock = document.querySelector("#letter") as HTMLElement;

  const getEmoji = (letter: string): string => {
    type List = { [key: string]: number[] };
    const upperCase = letter.toUpperCase();
    const list = (emojiList as List)[upperCase];
    if (list && list.length) {
      const codePoint = getRandomValue(list);
      return String.fromCodePoint(codePoint);
    }
    return "";
  };

  const isNonPrintingKey = (e: KeyboardEvent): boolean => {
    const { altKey, ctrlKey, metaKey, shiftKey } = e;
    return metaKey || ctrlKey || shiftKey || altKey;
  };

  //for the audio feature
  const attachAudio = (key: string) => {
    if (/[A-Z]/i.test(key)) {
      window?.playLetterSound(key.toLowerCase());
    }
  };

  document.addEventListener("keydown", (e: KeyboardEvent) => {
    const { key } = e;
    if (!mainBlock) return;

    if (!isNonPrintingKey(e)) {
      if (/^[A-Z]$/i.test(key)) {
        const emoji = getEmoji(key);
        mainBlock.innerHTML = key + emoji;
        attachAudio(key);
      } else if (/^[0-9]$/.test(key)) {
        mainBlock.innerHTML = key;
        //attachAudio(key);
      } else {
        const x = String.fromCodePoint(112080);
        mainBlock.innerHTML = x;
      }
    }
  });
</script>
