---
import statesData from "@/assets/map_assets/states.json";
---

<div class="container_map">
  <svg id="india-map" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1500 1800">
    <!-- States will be loaded dynamically -->
  </svg>
  <div id="state-tooltip" class="tooltip"></div>
</div>

<script define:vars={{ statesData }}>
  document.addEventListener("DOMContentLoaded", async () => {
    const indiaSvg = document.getElementById("india-map");
    const tooltip = document.getElementById("state-tooltip");

    async function loadStateSVGs() {
      const statesGroup = document.createElementNS("http://www.w3.org/2000/svg", "g");
      statesGroup.setAttribute("id", "india-states");

      for (const stateKey in statesData) {
        const stateInfo = statesData[stateKey];
        try {
          const response = await fetch(`/map_assets/svg/${stateInfo.svg}`);
          const svgText = await response.text();

          const tempDiv = document.createElement("div");
          tempDiv.innerHTML = svgText;
          const statePaths = tempDiv.querySelectorAll("path");

          statePaths.forEach((path) => {
            const clonedPath = path.cloneNode(true);
            clonedPath.setAttribute("data-state", stateKey);
            addEventListenersToState(clonedPath, stateInfo);
            statesGroup.appendChild(clonedPath);
          });
        } catch (error) {
          console.error(`Error loading SVG for ${stateKey}:`, error);
        }
      }
      indiaSvg.appendChild(statesGroup);
    }

    function addEventListenersToState(path, stateInfo) {
      path.style.fill = "#92ad5c";

      path.addEventListener("mousemove", (event) => {
        path.style.fill = "#FFA500";
        path.style.transform = "scale(1.02)";

        tooltip.textContent = stateInfo.name;
        tooltip.style.left = `${event.pageX + 10}px`;
        tooltip.style.top = `${event.pageY + 10}px`;
        tooltip.style.display = "block";
      });

      path.addEventListener("mouseleave", () => {
        path.style.fill = "#aee38a";
        path.style.transform = "scale(1)";
        tooltip.style.display = "none";
      });

      path.addEventListener("click", (event) => {
        const popupEvent = new CustomEvent("showStatePopup", {
          detail: { event, stateInfo }
        });
        document.dispatchEvent(popupEvent);
      });
    }

    loadStateSVGs();
  });
</script>
