---
interface LetterPair {
  hindi: string;
  kannada: string;
  type: 'vowel' | 'consonant' | 'separator';
}

const generateLetters = (startCode: number, length: number, extraKeys: number[] = []): string[] =>
  Array.from({ length }, (_, i) => String.fromCodePoint(startCode + i))
    .filter((_, index) => !extraKeys.includes(startCode + index));

const hindiVowels = generateLetters(2309, 16, [2317, 2321]);
const hindiConsonants = generateLetters(2325, 37);
const kannadaVowels = generateLetters(3205, 16, [3213, 3217]);
const kannadaConsonants = generateLetters(3221, 37);

const letterPairs: LetterPair[] = [
  ...hindiVowels.map((hindi, i) => ({
    hindi,
    kannada: kannadaVowels[i],
    type: 'vowel',
  })),
  { type: 'separator' } as LetterPair,
  ...hindiConsonants.map((hindi, i) => ({
    hindi,
    kannada: kannadaConsonants[i],
    type: 'consonant',
  })),
];

let toggleOrder = false;
---

<div class="language-letters-container">
  <div class="toggle-container">
    <button id="toggleButton" class="toggle-button">
      <span id="hindiLabel" class="language-label">हिंदी</span>
      <span id="kannadaLabel" class="language-label">ಕನ್ನಡ</span>
    </button>
  </div>
  
  <div class="language-letters-grid">
    <h2 class="group-heading" style="grid-column: 1 / -1;">VOWELS</h2>
    {letterPairs
      .filter((pair) => pair.type === 'vowel')
      .map((pair, index) => (
        <div
          key={`vowel-${index}`}
          class="language-letter-card language-letter-card-vowel"
        >
          <div class="language-letter-kannada">{pair.kannada}</div>
          <div class="language-letter-hindi">{pair.hindi}</div>
        </div>
      ))}

    <div class="language-letters-separator" style="grid-column: 1 / -1;"></div>

    <h2 class="group-heading" style="grid-column: 1 / -1;">CONSONANTS</h2>
    {letterPairs
      .filter((pair) => pair.type === 'consonant')
      .map((pair, index) => (
        <div
          key={`consonant-${index}`}
          class="language-letter-card language-letter-card-consonant"
        >
          <div class="language-letter-kannada">{pair.kannada}</div>
          <div class="language-letter-hindi">{pair.hindi}</div>
        </div>
      ))}
  </div>
</div>

<style>
  :root {
    --deep-blue: #0f172a;
    --navy-blue: #1e293b;
    --royal-blue: #1d4ed8;
    --sky-blue: #7dd3fc;
    --teal-accent: #2dd4bf;
    --text-primary: #f8fafc;
    --text-secondary: #94a3b8;
  }

  .language-letters-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem 1rem;
    background: var(--deep-blue);
    border-radius: 1.5rem;
    position: relative;
    overflow: hidden;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
  }

  .language-letters-container::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
      circle at 50% 50%,
      rgba(29, 78, 216, 0.1) 0%,
      rgba(15, 23, 42, 1) 80%
    );
    pointer-events: none;
  }

  .toggle-container {
    display: flex;
    justify-content: flex-end;
    margin-bottom: 1rem;
    position: relative;
    z-index: 2;
  }

  .toggle-button {
    display: flex;
    gap: 1rem;
    background: var(--navy-blue);
    border: 1px solid var(--royal-blue);
    padding: 0.75rem 1.5rem;
    border-radius: 0.75rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .language-label {
    font-size: 1.25rem;
    color: var(--text-secondary);
    transition: all 0.3s ease;
  }

  .language-label.active {
    color: var(--teal-accent);
    transform: scale(1.1);
  }

  .language-letters-grid {
    display: grid;
    gap: 1rem;
    padding: 1rem;
    position: relative;
    z-index: 1;
    grid-template-columns: repeat(5, 1fr);
  }

  @media (max-width: 1024px) {
    .language-letters-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  @media (max-width: 768px) {
    .language-letters-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media (max-width: 480px) {
    .language-letters-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .group-heading {
    color: var(--teal-accent);
    font-size: 1.5rem;
    padding: 1rem 0;
    letter-spacing: 0.1em;
    border-bottom: 2px solid var(--royal-blue);
    margin-bottom: 1rem;
  }

  .language-letters-separator {
    grid-column: 1 / -1;
    height: 1px;
    background: linear-gradient(
      to right,
      transparent,
      rgba(125, 211, 252, 0.3),
      transparent
    );
    margin: 1.5rem 0;
  }

  .language-letter-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem 0.5rem;
    border-radius: 0.75rem;
    background: var(--navy-blue);
    border: 1px solid rgba(125, 211, 252, 0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    position: relative;
    overflow: hidden;
    min-height: 120px;
  }

  .language-letter-card::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba(125, 211, 252, 0.1) 0%,
      rgba(29, 78, 216, 0.05) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .language-letter-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
    border-color: rgba(125, 211, 252, 0.3);
  }

  .language-letter-card:hover::before {
    opacity: 1;
  }

  .language-letter-card-vowel {
    border-top: 2px solid var(--royal-blue);
  }

  .language-letter-card-consonant {
    border-top: 2px solid var(--teal-accent);
  }

  .language-letter-kannada {
    font-size: 2rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 0.5rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease;
  }

  .language-letter-card:hover .language-letter-kannada {
    transform: scale(1.1);
  }

  .language-letter-hindi {
    font-size: 1.25rem;
    font-weight: 500;
    color: var(--text-secondary);
    margin-bottom: 0.25rem;
    opacity: 0.9;
    transition: all 0.3s ease;
  }

  .language-letter-card.reverse .language-letter-kannada {
    order: 2;
    transform: scale(0.8);
    color: var(--text-secondary);
  }

  .language-letter-card.reverse .language-letter-hindi {
    order: 1;
    transform: scale(1.1);
    color: var(--text-primary);
  }
</style>

<script>
  const toggleButton = document.getElementById('toggleButton');
  const hindiLabel = document.getElementById('hindiLabel');
  const kannadaLabel = document.getElementById('kannadaLabel');
  let isKannadaFirst = true;

  // Set initial state
  kannadaLabel.classList.add('active');

  toggleButton.addEventListener('click', () => {
    const cards = document.querySelectorAll('.language-letter-card');
    isKannadaFirst = !isKannadaFirst;

    cards.forEach((card) => {
      card.classList.toggle('reverse');
    });

    // Toggle active labels
    hindiLabel.classList.toggle('active');
    kannadaLabel.classList.toggle('active');
  });
</script>